version: '3'

services:

  tasmap_postgres:
    image: laurensia/tasmap-postgres
    container_name: tasmap_postgres
    build:
      context: .
      dockerfile: ./docker/postgres/Dockerfile
    env_file: .env
    volumes:
      - dbdata_tasmap:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - tasmap-network

  tasmap_api:
    image: laurensia/tasmap-api
    container_name: tasmap_api
    depends_on:
      tasmap_postgres:
        condition: service_healthy
      tasmap_session:
        condition: service_started
    build:
      context: .
      dockerfile: ./docker/api/DockerfileForProvision
    env_file: .env
    volumes:
      - ./:/go/src/github.com/kenkonno/gantt-chart-proto/backend/
    tty:
      true
    networks:
      - tasmap-network

  tasmap_migration:
    image: laurensia/tasmap-migration
    container_name: tasmap_migration
    depends_on:
      tasmap_postgres:
        condition: service_healthy
    build:
      context: .
      dockerfile: ./docker/migration/DockerfileForProvision
    env_file: .env
    volumes:
      - ./:/go/src/github.com/kenkonno/gantt-chart-proto/backend/
    tty:
      true
    networks:
      - tasmap-network

  tasmap_session:
    image: laurensia/tasmap-session
    container_name: tasmap_session
    build:
      context: .
      dockerfile: ./docker/session/Dockerfile
    env_file: .env
    networks:
      - tasmap-network

  tasmap_web:
    image: laurensia/tasmap-web
    container_name: tasmap_web
    depends_on:
      tasmap_api:
        condition: service_started
    ports:
      - "80:80"
    build:
      context: .
      dockerfile: ./docker/web/Dockerfile
    env_file: .env
    networks:
      - tasmap-network
volumes:
  dbdata_tasmap:
    external: true
networks:
  tasmap-network:
    driver: bridge